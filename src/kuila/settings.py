"""
Django settings for the kuila project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import environ

# Base directory for the project, used to build paths for other files
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialize environment variables
env = environ.Env()

# Load environment variables from the specified file
environ.Env.read_env('.config_env')

# Debug mode settings
DEBUG = env.bool('DEBUG', default=False)  # Set to True to enable debugging features

# Secret key for cryptographic signing
SECRET_KEY = env('SECRET_KEY')  # This should be kept secret and secure

# List of allowed hosts for the application
ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=['localhost', '127.0.0.1'])

# Security settings
SECURE_SSL_REDIRECT = env.bool('SECURE_SSL_REDIRECT', default=False)  # Redirect all HTTP requests to HTTPS
SESSION_COOKIE_SECURE = env.bool('SESSION_COOKIE_SECURE', default=False)  # Use secure cookies for sessions
CSRF_COOKIE_SECURE = env.bool('CSRF_COOKIE_SECURE', default=False)  # Use secure cookies for CSRF protection
SECURE_BROWSER_XSS_FILTER = env.bool('SECURE_BROWSER_XSS_FILTER', default=True)  # Enable the browser's XSS filter
SECURE_CONTENT_TYPE_NOSNIFF = env.bool('SECURE_CONTENT_TYPE_NOSNIFF', default=True)  # Prevent browsers from interpreting files as different MIME types

# Database settings
DATABASES = {
    'default': env.db(),  # Load database configuration from environment variables
}

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users_accounts',
    'users_profiles',
    'categories',
    'notebook',
    'ckeditor',  # CKEditor for rich text editing
]

# Middleware configuration
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# URL configuration
ROOT_URLCONF = 'kuila.urls'

# Template configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'frontend/templates'],  # Directory for template files
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI application
WSGI_APPLICATION = 'kuila.wsgi.application'

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization settings
LANGUAGE_CODE = 'en-us'  # Default language for the project
TIME_ZONE = 'UTC'  # Default time zone for the project
USE_I18N = True  # Enable internationalization
USE_TZ = True  # Enable time zone support

# Static files (CSS, JavaScript, Images) settings
STATIC_URL = 'static/'  # URL for serving static files
STATICFILES_DIRS = [
    BASE_DIR / 'frontend/static'  # Directory for additional static files
]
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Directory for collected static files
MEDIA_URL = '/media/'  # URL for serving media files
MEDIA_ROOT = BASE_DIR / 'media'  # Directory for uploaded media files

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication settings
AUTH_USER_MODEL = 'users_accounts.KuilaUser'  # Custom user model

# URL redirection settings for authentication
LOGIN_URL = '/login/'  # URL for the login page
LOGIN_REDIRECT_URL = '/'  # URL to redirect to after login
LOGOUT_REDIRECT_URL = '/'  # URL to redirect to after logout

# CKEditor configuration
CKEDITOR_UPLOAD_PATH = 'uploads/ckeditor/'  # Path for uploaded CKEditor files
CKEDITOR_ALLOW_NONIMAGE_FILES = False  # Only allow image files
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': [
            {'name': 'document', 'items': ['Save', 'NewPage', 'ExportPdf', 'Preview', 'Print', 'Templates']},
            {'name': 'clipboard', 'items': ['Copy', 'Paste', 'PasteText', '-', 'Undo', 'Redo']},
            {'name': 'editing', 'items': ['Find', 'SelectAll']},
            {'name': 'basicstyles', 'items': [
                'Bold', 'Italic', 'Strike', 'Subscript', 'Superscript', '-', 'CopyFormatting', 'RemoveFormat'
            ]},
            {'name': 'paragraph', 'items': [
                'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', '-',
                'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'Language'
            ]},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {'name': 'insert', 'items': ['Table', 'HorizontalRule', 'Smiley', 'SpecialChar']},
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['Maximize']}
        ],
        'height': 400,
        'width': '100%',
        'toolbarCanCollapse': True,
        'extraPlugins': ','.join([
            'exportpdf',  # Plugin for PDF export
            'copyformatting',  # Plugin for copying formatting
            'divarea',  # Enable div area editing mode
        ]),
    },
}
